{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","setYearValues","n","Date","getFullYear","toString","className","onChange","e","year","target","value","setInitialYearValues","onFilterDateChange","selectedYear","Card","classes","children","ExpenseDate","Month","date","toLocaleString","month","Year","Day","day","ExpenseItem","title","amount","ExpensesList","filteredData","length","map","expense","id","ChartBar","progressHeight","maxValue","Math","round","style","height","label","Chart","valueArray","dataPoints","data","max","dataPoint","ExpensesChart","chartData","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","expensesItems","filter","initialYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","onSubmitExpenseForm","formVisibilityToggle","type","placeholder","min","step","class","onClick","NewExpense","formIsVisible","setFormIsVisible","toggleFormVisibilityHandler","val","href","enteredExpenseData","ExpensesData","onSavedNewExpense","MOCK_DATA","App","setExpenses","newExpense","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e9491870.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dateFilterHandler = (e) => {\r\n    const year = e.target.value || props.setInitialYearValues();\r\n    props.onFilterDateChange(year);\r\n  };\r\n\r\n  const setYearValues = (n) => {\r\n    return (new Date().getFullYear() - n).toString();\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select onChange={dateFilterHandler} value={props.selectedYear}>\r\n          <option value={setYearValues(-1)}>{setYearValues(-1)}</option>\r\n          <option value={setYearValues(0)}>{setYearValues(0)}</option>\r\n          <option value={setYearValues(1)}>{setYearValues(1)}</option>\r\n          <option value={setYearValues(2)}>{setYearValues(2)}</option>\r\n          <option value={setYearValues(3)}>{setYearValues(3)}</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = `card ${props.className}`;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","// Import specific CSS style file for this component\r\nimport React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\n\r\nfunction ExpenseDate(props) {\r\n  const Month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const Year = props.date.getFullYear();\r\n  const Day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{Month}</div>\r\n      <div className=\"expense-date__year\">{Year}</div>\r\n      <div className=\"expense-date__day\">{Day}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExpenseDate;\r\n","// Import specific CSS style file for this component\r\nimport \"./ExpenseItem.css\";\r\n\r\n// Import child component for this component\r\nimport React from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\n// Component Template Section\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">RM{props.amount}</div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nfunction ExpensesList(props) {\r\n  // Adding conditional rendering incase no expenses found, this is gated expression since if the condition is true, it returns the h2 tag and ends the function, hence\r\n  // the return for ExpenseItem components wont fire\r\n  if (props.filteredData.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found No Expenses!</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.filteredData.map((expense) => (\r\n        <ExpenseItem\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n          key={expense.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ExpensesList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let progressHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    progressHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: progressHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = (props) => {\r\n  // Creating a list of array with values to pass as arguement to maxValue, to get max value\r\n  const valueArray = props.dataPoints.map((data) => data.value);\r\n  // Spreading the array thus spreading the values needed by .max()\r\n  const maxValue = Math.max(...valueArray); // .max(1, 2, 3) receives a list of numbers to work\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={maxValue}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartData = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth(); // starting at index 0 => January\r\n    chartData[expenseMonth].value += expense.amount; // updating the value usig for loop\r\n  }\r\n\r\n  return <Chart dataPoints={chartData} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","// Import CSS file for this component\r\nimport React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\n\r\n// Import child component for this component\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\n// useState hook is used to dynamically change values of props or data on the DOM realtime, without it, the page is static\r\n// useState() takes a param, which is variable that will be changed or manipulated, and useState(var) returns an array with 2 values [var, varManipulatorFunction]\r\nconst Expenses = (props) => {\r\n  const setInitialYearValues = () => {\r\n    return new Date().getFullYear().toString();\r\n  };\r\n\r\n  const [filteredYear, setFilteredYear] = useState(setInitialYearValues());\r\n\r\n  const filterDateSelectionHandler = (year) => {\r\n    return setFilteredYear(year);\r\n  };\r\n\r\n  const filteredData = props.expensesItems.filter(\r\n    (expense) => expense.date.getFullYear().toString() === filteredYear\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selectedYear={filteredYear}\r\n          initialYear={setInitialYearValues}\r\n          onFilterDateChange={filterDateSelectionHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredData} />\r\n        <ExpensesList filteredData={filteredData} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import \"./ExpenseForm.css\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  // storing input value into multiple states using useState(), managing states separately, this method allows individually update states\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (e) => {\r\n    // storing the new value into enteredTitle\r\n    setEnteredTitle(e.target.value);\r\n  };\r\n  const amountChangeHandler = (e) => {\r\n    setEnteredAmount(e.target.value);\r\n  };\r\n  const dateChangeHandler = (e) => {\r\n    setEnteredDate(e.target.value);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    // Passing data to parent via using custom prop functions created in the parent component one level at a time\r\n    props.onSubmitExpenseForm(expenseData);\r\n\r\n    //clearing inputs upon submission\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    if (expenseData.title !== \"\") return props.formVisibilityToggle();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n            placeholder={`Enter expenses name`}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input\r\n            value={enteredAmount}\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            onChange={amountChangeHandler}\r\n            placeholder={`Enter expenditure amount`}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            value={enteredDate}\r\n            type=\"date\"\r\n            min=\"2021-01-01\"\r\n            max=\"2023-12-31\"\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n        <div className=\"new-actions\">\r\n          <button type=\"submit\">\r\n            <i class=\"bi bi-plus-lg\"></i> Add Expense\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"red\"\r\n            onClick={props.formVisibilityToggle}\r\n          >\r\n            <i class=\"bi bi-x-lg\"></i> Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [formIsVisible, setFormIsVisible] = useState(false);\r\n\r\n  const IdGenerator = (data) => {\r\n    return [...data].length + 1;\r\n  };\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      id: IdGenerator(props.ExpensesData),\r\n      ...enteredExpenseData,\r\n    };\r\n\r\n    // Passing data to parent via using custom prop functions created in the parent component one level at a time\r\n    props.onSavedNewExpense(expenseData);\r\n  };\r\n\r\n  const toggleFormVisibilityHandler = () => {\r\n    // one-liner code for toggling previous value\r\n    return setFormIsVisible((val) => !val);\r\n  };\r\n\r\n  // Conditionally rendering components based on state\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!formIsVisible && (\r\n        <div className=\"new-expense__button-nav\">\r\n          <a\r\n            href=\"https://github.com/rubanero14/React-Lessons-Section3-First-React-App\"\r\n            target=\"_blank\"\r\n          >\r\n            <i class=\"bi bi-filetype-jsx\"></i> Source Code\r\n          </a>\r\n          <button onClick={toggleFormVisibilityHandler}>\r\n            <i class=\"bi bi-wallet2\"></i> Add New Expense\r\n          </button>\r\n        </div>\r\n      )}\r\n      {formIsVisible && (\r\n        <ExpenseForm\r\n          onSubmitExpenseForm={saveExpenseDataHandler}\r\n          formVisibilityToggle={toggleFormVisibilityHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","// Import child component for this component\nimport React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst MOCK_DATA = [\n  {\n    id: 1,\n    title: \"Car Insurance\",\n    amount: 483.0,\n    date: new Date(2019, 8, 20),\n  },\n  {\n    id: 2,\n    title: \"Mortgage\",\n    amount: 2500.0,\n    date: new Date(2020, 8, 21),\n  },\n  {\n    id: 3,\n    title: \"Car Service\",\n    amount: 1300.0,\n    date: new Date(2021, 8, 2),\n  },\n  {\n    id: 4,\n    title: \"New Udemy Course\",\n    amount: 70.0,\n    date: new Date(2022, 8, 30),\n  },\n];\n\n// Intiating App function using ES6 way (Arrow function), rather than traditional function App(){} function syntax\nconst App = () => {\n  const [expenses, setExpenses] = useState(MOCK_DATA);\n  // Adding data passed from child component to object bove\n  const addNewExpenseHandler = (newExpense) => {\n    // Best practice to update list or array is by using callback instead of passing array or object\n    setExpenses(() => {\n      return [newExpense, ...expenses];\n    });\n  };\n\n  // Creating elements in DOM using JSX React method\n  return (\n    <div>\n      <NewExpense\n        ExpensesData={expenses}\n        onSavedNewExpense={addNewExpenseHandler}\n      />\n      <Expenses expensesItems={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","// This import should be imported wheneve the file has JSX codes\nimport React from \"react\";\n\n// This import is to initiate the React project and compiling to browser based codes\nimport ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(<App />);\n"],"sourceRoot":""}